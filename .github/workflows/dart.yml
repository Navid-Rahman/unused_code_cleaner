# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  # Main package testing (pure Dart)
  test-dart-package:
    runs-on: ubuntu-latest
    name: Test Dart Package

    steps:
      - uses: actions/checkout@v4

      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603

      - name: Install dependencies for main package
        run: |
          # Temporarily move example directory to prevent dependency conflicts
          if [ -d "example" ]; then
            mv example example_temp
          fi
          dart pub get
          # Restore example directory
          if [ -d "example_temp" ]; then
            mv example_temp example
          fi

      - name: Verify formatting
        run: |
          if [ -d "example" ]; then
            mv example example_temp
          fi
          dart format --output=none --set-exit-if-changed .
          if [ -d "example_temp" ]; then
            mv example_temp example
          fi

      - name: Analyze project source
        run: |
          if [ -d "example" ]; then
            mv example example_temp
          fi
          dart analyze --fatal-infos
          if [ -d "example_temp" ]; then
            mv example_temp example
          fi

      - name: Run tests
        run: |
          if [ -d "example" ]; then
            mv example example_temp
          fi
          dart test
          if [ -d "example_temp" ]; then
            mv example_temp example
          fi

      - name: Test CLI tool activation
        run: |
          if [ -d "example" ]; then
            mv example example_temp
          fi
          dart pub global activate --source path .
          dart pub global run unused_code_cleaner --help
          if [ -d "example_temp" ]; then
            mv example_temp example
          fi

  # Example app testing (requires Flutter)
  test-flutter-example:
    runs-on: ubuntu-latest
    name: Test Flutter Example

    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.3"
          channel: "stable"

      - name: Verify example assets exist
        run: |
          if [ ! -f "example/assets/used.png" ]; then
            echo "Creating placeholder asset files..."
            mkdir -p example/assets
            echo "# Placeholder for used.png" > example/assets/used.png
            echo "# Placeholder for unused.png" > example/assets/unused.png
          fi

      - name: Install dependencies for Flutter example
        working-directory: example
        run: flutter pub get

      - name: Analyze Flutter example
        working-directory: example
        run: flutter analyze

      - name: Test Flutter example build (debug only)
        working-directory: example
        run: flutter build apk --debug
