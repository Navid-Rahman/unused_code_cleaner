name: 📦 Publish to pub.dev

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish (e.g., 1.8.1)"
        required: true
        type: string
  push:
    tags:
      - 'v*.*.*'

# Add OIDC token permissions
permissions:
  contents: read
  id-token: write

env:
  PUB_ENVIRONMENT: bot.github

jobs:
  publish:
    name: 🚀 Publish Package
    runs-on: ubuntu-latest

    steps:
      - name: 📁 Checkout repository
        uses: actions/checkout@v4

      - name: 🎯 Setup Dart SDK
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable

      - name: 📦 Install dependencies
        run: dart pub get

      - name: ✨ Check formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: 🔬 Analyze code
        run: dart analyze --fatal-infos

      - name: 🧪 Run tests
        run: dart test

      - name: 📊 Validate package
        run: dart pub publish --dry-run

      - name: 🏷️ Verify version consistency
        run: |
          # Get version from tag if triggered by tag push, otherwise use input
          if [[ "${{ github.event_name }}" == "push" ]]; then
            TAG_VERSION=${GITHUB_REF#refs/tags/v}
            PUBSPEC_VERSION=$(grep '^version:' pubspec.yaml | cut -d' ' -f2)
            
            if [ "$PUBSPEC_VERSION" != "$TAG_VERSION" ]; then
              echo "❌ Version mismatch!"
              echo "   pubspec.yaml: $PUBSPEC_VERSION"
              echo "   Git tag: $TAG_VERSION"
              exit 1
            fi
            
            echo "✅ Version verified: $PUBSPEC_VERSION"
            echo "PUBLISH_VERSION=$PUBSPEC_VERSION" >> $GITHUB_ENV
          else
            PUBSPEC_VERSION=$(grep '^version:' pubspec.yaml | cut -d' ' -f2)
            INPUT_VERSION="${{ github.event.inputs.version }}"
            
            if [ "$PUBSPEC_VERSION" != "$INPUT_VERSION" ]; then
              echo "❌ Version mismatch!"
              echo "   pubspec.yaml: $PUBSPEC_VERSION"
              echo "   Input version: $INPUT_VERSION"
              exit 1
            fi
            
            echo "✅ Version verified: $PUBSPEC_VERSION"
            echo "PUBLISH_VERSION=$PUBSPEC_VERSION" >> $GITHUB_ENV
          fi

      - name: 🚀 Publish to pub.dev
        run: |
          echo "Publishing version $PUBLISH_VERSION to pub.dev using OIDC..."
          dart pub publish --force

      - name: 🏷️ Create Git Tag
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a "v$PUBLISH_VERSION" -m "Release v$PUBLISH_VERSION"
          git push origin "v$PUBLISH_VERSION"

      - name: 🎉 Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.PUBLISH_VERSION }}
          release_name: Release v${{ env.PUBLISH_VERSION }}
          body: |
            ## 🎉 Version ${{ env.PUBLISH_VERSION }}

            Successfully published to [pub.dev](https://pub.dev/packages/unused_code_cleaner).

            ### 📦 Installation
            ```bash
            dart pub global activate unused_code_cleaner
            ```

            ### 🚀 Usage
            ```bash
            unused_code_cleaner --help
            ```

            ### 📋 Changes
            See [CHANGELOG.md](CHANGELOG.md) for detailed changes in this release.
          draft: false
          prerelease: false
